# --[ includes ] ----------------------------------------------------------- {{{
include theme/Flatland.conf

# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

#: kitty has very powerful font management. You can configure
#: individual font faces and even specify special fonts for particular
#: characters.

font_family      Hack Regular
italic_font      Hack Italic
bold_font        Hack Bold
bold_italic_font Hack Bold Italic

# Fonts
font_size 14.0

# Gimme ligatures
disable_ligatures never


active_tab_foreground   #000
active_tab_background   #fff
active_tab_font_style   bold
inactive_tab_foreground #444
inactive_tab_background #777
inactive_tab_font_style normal

## Layouts
enabled_layouts splits

# Please stop closing my windows...
confirm_os_window_close 1

# Give me lots of screen_scrollback
scrollback_lines 4000

# Bells
enable_audio_bell     no
visual_bell_duration  0.25

# Window Style
window_border_width   0.5
active_border_color #fff
inactive_border_color #000000
window_margin_width  2
# background            #333333
# background_opacity    1

# Pull in ENV-specific configuration.

# map cmd+` nth_os_window +1

bell_on_tab "ðŸ”” "

# cursor #cccccc
cursor_text_color background
# cursor_shape block
# cursor_blink_interval -1

# --[ tabs ] --------------------------------------------------------------- {{{
# fade, slant, separator, powerline (slanted, angled, round), custom
tab_bar_style                   custom
tab_separator                   ""
# REF: https://github.com/kovidgoyal/kitty/discussions/4447
tab_fade                        0 0 0 0
tab_title_template              "{fmt.fg._415c6d}{fmt.bg.default} â—‹ {index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) + 1 > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
active_tab_title_template       "{fmt.fg._83b6af}{fmt.bg.default} ðŸš€ {index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) + 1 > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
tab_activity_symbol             none
tab_bar_edge                    top
tab_bar_margin_height           0.0 0.0
active_tab_font_style           bold-italic
inactive_tab_font_style         normal
tab_bar_min_tabs                2

# --[ cursor ] ------------------------------------------------------------- {{{
cursor                          none
# The cursor shape can be one of (block, beam, underline)
# cursor_shape     block
cursor_stop_blinking_after      10.0
pointer_shape_when_dragging     hand
#}}}

# --[ mouse ] -------------------------------------------------------------- {{{
copy_on_select                  yes
# -1 effectively means infinite scrollback
scrollback_lines                20000
# The modifiers to use rectangular selection (i.e. to select text in a
# rectangular block with the mouse)
# rectangle_select_modifiers ctrl+alt
mouse_hide_wait                 15
# Set the active window to the window under the mouse when moving the mouse around
focus_follows_mouse             yes
#}}}

# --[ bells ] -------------------------------------------------------------- {{{
enable_audio_bell               no
# Makes the dock icon bounce on macOS or the taskbar flash on linux.
window_alert_on_bell            no
#}}}

# --[ windows ] ------------------------------------------------------------ {{{
remember_window_size            yes
enabled_layouts                 tall:bias=55;tall:bias=50;full_size=1;stack;fat;grid;horizontal;split;mirrored=false;
window_border_width             1.0
window_margin_width             0.0
window_padding_width            15.0
# window_padding_width            4 0 0 0
placement_strategy              top-left
inactive_text_alpha             0.8
# (static,scale,size)
resize_draw_strategy            static
#}}}

# --[ os-specific ] -------------------------------------------------------- {{{
draw_minimal_borders                    no
# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the background color of the currently active window and finally you can use
# an arbitrary color, such as #12af59 or "red". WARNING: This option works by
# using a hack, as there is no proper Cocoa API for it. It sets the background
# color of the entire window and makes the titlebar transparent. As such it is
# incompatible with background_opacity. If you want to use both, you are
# probably better off just hiding the titlebar with macos_hide_titlebar.
# Match one dark vim title bar background color
macos_titlebar_color                    background
macos_hide_from_tasks                   no
macos_traditional_fullscreen            yes
macos_quit_when_last_window_closed      yes
macos_thicken_font                      0.75
macos_custom_beam_cursor                yes
# Use the option key as an alt key. With this set to no, kitty will use
# the macOS native Option+Key = unicode character behavior. This will
# break any Alt+key keyboard shortcuts in your terminal programs, but you
# can use the macOS unicode input technique.
macos_option_as_alt                     yes
macos_show_window_title_in              window
# macos_colorspace                        displayp3
#}}}


# --[ misc ] --------------------------------------------------------------- {{{
# or 0, 1, 2 (number of tabs)
# REF: https://sw.kovidgoyal.net/kitty/conf/?highlight=margin#opt-kitty.confirm_os_window_close
confirm_os_window_close                 0
dynamic_background_opacity yes
# url_style can be one of: none, single, double, curly
url_style curly
#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly
open_url_modifiers super
#: The modifier keys to press when clicking with the mouse on URLs to
#: open the URL
open_url_with default
#: The program with which to open URLs that are clicked on. The
#: special value default means to use the operating system's default
#: URL handler.
url_prefixes http https file ftp
#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.
copy_on_select yes
#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, simply selecting text with the mouse will cause the text
#: to be copied to clipboard. Useful on platforms such as macOS that
#: do not have the concept of primary selections. You can instead
#: specify a name such as a1 to copy to a private kitty buffer
#: instead. Map a shortcut with the paste_from_buffer action to paste
#: from this private buffer. For example::
#:     map cmd+shift+v paste_from_buffer a1
#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.
strip_trailing_spaces never
#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.
rectangle_select_modifiers ctrl+alt
#: The modifiers to use rectangular selection (i.e. to select text in
#: a rectangular block with the mouse)
terminal_select_modifiers shift
#: The modifiers to override mouse selection even when a terminal
#: application has grabbed the mouse
select_by_word_characters @-./_~?&=%+#
# map cmd+left click to open URLs
mouse_map super+left release grabbed,ungrabbed mouse_handle_click link
sync_to_monitor yes
visual_bell_duration 0
background_opacity 1.0
pointer_shape_when_dragging hand
# How much to dim text that has the DIM/FAINT attribute set. 1.0 means no dimming and
# 0.0 means fully dimmed (i.e. invisible).
dim_opacity 0.90
allow_hyperlinks yes
close_on_child_death yes
allow_remote_control yes
clipboard_control write-clipboard write-primary read-clipboard
# term xterm-256color
term xterm-kitty
macos_hide_from_tasks no
macos_traditional_fullscreen yes
macos_quit_when_last_window_closed yes
#
# REF: https://github.com/kovidgoyal/kitty/issues/719#issuecomment-952039731
# with a minimal config
# scrollback_pager nvim --noplugin -u ~/.config/kitty/scrollback-pager/nvim/init.vim -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
# with a minimal no-config
# scrollback_pager nvim -c "set norelativenumber nonumber nolist showtabline=0 foldcolumn=0" -c "autocmd TermOpen * normal G" -c "silent! write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
# scrollback_pager nvim -c 'setlocal number norelativenumber nolist showtabline=0 foldcolumn=0|Man!' -c "autocmd VimEnter * normal G" -

# REF: https://github.com/kristijanhusak/neovim-config/blob/master/kitty/kitty.conf#L21
scrollback_pager nvim --noplugin -u NONE -c 'runtime plugin/man.vim|Man!' -c "autocmd VimEnter * normal G" -c "nnoremap Q :qa!<CR>" -

kitty_mod super+shift
# kitty_mod super

map kitty_mod+v paste_from_clipboard
map super+v        paste_from_clipboard
map super+s        paste_from_selection
map super+c        copy_to_clipboard
map super+f        toggle_fullscreen
map kitty_mod+l        next_tab
map kitty_mod+h        previous_tab
# remove line
map super+backspace send_text all \x15
# move to beginning
map kitty_mod+b send_text all \x01
# move to end
map kitty_mod+w send_text all \x05
map super+t         new_tab
map kitty_mod+t new_tab_with_cwd


